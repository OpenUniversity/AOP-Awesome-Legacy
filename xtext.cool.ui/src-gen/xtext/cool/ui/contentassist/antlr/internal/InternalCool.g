/*
* generated by Xtext
*/
grammar InternalCool;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package xtext.cool.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package xtext.cool.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import xtext.cool.services.CoolGrammarAccess;

}

@parser::members {
 
 	private CoolGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CoolGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleCoordinatorDeclaration
entryRuleCoordinatorDeclaration 
:
{ before(grammarAccess.getCoordinatorDeclarationRule()); }
	 ruleCoordinatorDeclaration
{ after(grammarAccess.getCoordinatorDeclarationRule()); } 
	 EOF 
;

// Rule CoordinatorDeclaration
ruleCoordinatorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCoordinatorDeclarationAccess().getGroup()); }
(rule__CoordinatorDeclaration__Group__0)
{ after(grammarAccess.getCoordinatorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCoordinatorBody
entryRuleCoordinatorBody 
:
{ before(grammarAccess.getCoordinatorBodyRule()); }
	 ruleCoordinatorBody
{ after(grammarAccess.getCoordinatorBodyRule()); } 
	 EOF 
;

// Rule CoordinatorBody
ruleCoordinatorBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getGroup()); }
(rule__CoordinatorBody__Group__0)
{ after(grammarAccess.getCoordinatorBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMutexSet
entryRuleMutexSet 
:
{ before(grammarAccess.getMutexSetRule()); }
	 ruleMutexSet
{ after(grammarAccess.getMutexSetRule()); } 
	 EOF 
;

// Rule MutexSet
ruleMutexSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMutexSetAccess().getGroup()); }
(rule__MutexSet__Group__0)
{ after(grammarAccess.getMutexSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondVar
entryRuleCondVar 
:
{ before(grammarAccess.getCondVarRule()); }
	 ruleCondVar
{ after(grammarAccess.getCondVarRule()); } 
	 EOF 
;

// Rule CondVar
ruleCondVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCondVarAccess().getGroup()); }
(rule__CondVar__Group__0)
{ after(grammarAccess.getCondVarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrdVar
entryRuleOrdVar 
:
{ before(grammarAccess.getOrdVarRule()); }
	 ruleOrdVar
{ after(grammarAccess.getOrdVarRule()); } 
	 EOF 
;

// Rule OrdVar
ruleOrdVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrdVarAccess().getGroup()); }
(rule__OrdVar__Group__0)
{ after(grammarAccess.getOrdVarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanVal
entryRuleBooleanVal 
:
{ before(grammarAccess.getBooleanValRule()); }
	 ruleBooleanVal
{ after(grammarAccess.getBooleanValRule()); } 
	 EOF 
;

// Rule BooleanVal
ruleBooleanVal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValAccess().getAlternatives()); }
(rule__BooleanVal__Alternatives)
{ after(grammarAccess.getBooleanValAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BooleanVal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBooleanValAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBooleanValAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBooleanValAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__CoordinatorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorDeclaration__Group__0__Impl
	rule__CoordinatorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorDeclarationAccess().getGranularityAssignment_0()); }
(rule__CoordinatorDeclaration__GranularityAssignment_0)?
{ after(grammarAccess.getCoordinatorDeclarationAccess().getGranularityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorDeclaration__Group__1__Impl
	rule__CoordinatorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorDeclarationAccess().getCoordinatorKeyword_1()); }

	'coordinator' 

{ after(grammarAccess.getCoordinatorDeclarationAccess().getCoordinatorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorDeclaration__Group__2__Impl
	rule__CoordinatorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorDeclarationAccess().getClassNameAssignment_2()); }
(rule__CoordinatorDeclaration__ClassNameAssignment_2)
{ after(grammarAccess.getCoordinatorDeclarationAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorDeclarationAccess().getBodyAssignment_3()); }
(rule__CoordinatorDeclaration__BodyAssignment_3)?
{ after(grammarAccess.getCoordinatorDeclarationAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CoordinatorBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group__0__Impl
	rule__CoordinatorBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getCoordinatorBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group__1__Impl
	rule__CoordinatorBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getCoordinatorBodyAction_1()); }
(

)
{ after(grammarAccess.getCoordinatorBodyAccess().getCoordinatorBodyAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group__2__Impl
	rule__CoordinatorBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getGroup_2()); }
(rule__CoordinatorBody__Group_2__0)*
{ after(grammarAccess.getCoordinatorBodyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group__3__Impl
	rule__CoordinatorBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getGroup_3()); }
(rule__CoordinatorBody__Group_3__0)*
{ after(grammarAccess.getCoordinatorBodyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group__4__Impl
	rule__CoordinatorBody__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getGroup_4()); }
(rule__CoordinatorBody__Group_4__0)?
{ after(grammarAccess.getCoordinatorBodyAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group__5__Impl
	rule__CoordinatorBody__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getMutexSetsAssignment_5()); }
(rule__CoordinatorBody__MutexSetsAssignment_5)*
{ after(grammarAccess.getCoordinatorBodyAccess().getMutexSetsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getCoordinatorBodyAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__CoordinatorBody__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_2__0__Impl
	rule__CoordinatorBody__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getConditionKeyword_2_0()); }

	'condition' 

{ after(grammarAccess.getCoordinatorBodyAccess().getConditionKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_2__1__Impl
	rule__CoordinatorBody__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getCondVarsAssignment_2_1()); }
(rule__CoordinatorBody__CondVarsAssignment_2_1)
{ after(grammarAccess.getCoordinatorBodyAccess().getCondVarsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_2__2__Impl
	rule__CoordinatorBody__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getGroup_2_2()); }
(rule__CoordinatorBody__Group_2_2__0)*
{ after(grammarAccess.getCoordinatorBodyAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getSemicolonKeyword_2_3()); }

	';' 

{ after(grammarAccess.getCoordinatorBodyAccess().getSemicolonKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CoordinatorBody__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_2_2__0__Impl
	rule__CoordinatorBody__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getCoordinatorBodyAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getCondVarsAssignment_2_2_1()); }
(rule__CoordinatorBody__CondVarsAssignment_2_2_1)
{ after(grammarAccess.getCoordinatorBodyAccess().getCondVarsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CoordinatorBody__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_3__0__Impl
	rule__CoordinatorBody__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getIntKeyword_3_0()); }

	'int' 

{ after(grammarAccess.getCoordinatorBodyAccess().getIntKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_3__1__Impl
	rule__CoordinatorBody__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getOrdVarsAssignment_3_1()); }
(rule__CoordinatorBody__OrdVarsAssignment_3_1)
{ after(grammarAccess.getCoordinatorBodyAccess().getOrdVarsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_3__2__Impl
	rule__CoordinatorBody__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getGroup_3_2()); }
(rule__CoordinatorBody__Group_3_2__0)*
{ after(grammarAccess.getCoordinatorBodyAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getSemicolonKeyword_3_3()); }

	';' 

{ after(grammarAccess.getCoordinatorBodyAccess().getSemicolonKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CoordinatorBody__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_3_2__0__Impl
	rule__CoordinatorBody__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getCoordinatorBodyAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getOrdVarsAssignment_3_2_1()); }
(rule__CoordinatorBody__OrdVarsAssignment_3_2_1)
{ after(grammarAccess.getCoordinatorBodyAccess().getOrdVarsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CoordinatorBody__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_4__0__Impl
	rule__CoordinatorBody__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getSelfexKeyword_4_0()); }

	'selfex' 

{ after(grammarAccess.getCoordinatorBodyAccess().getSelfexKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_4__1__Impl
	rule__CoordinatorBody__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getSelfexMethodsAssignment_4_1()); }
(rule__CoordinatorBody__SelfexMethodsAssignment_4_1)
{ after(grammarAccess.getCoordinatorBodyAccess().getSelfexMethodsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_4__2__Impl
	rule__CoordinatorBody__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getGroup_4_2()); }
(rule__CoordinatorBody__Group_4_2__0)*
{ after(grammarAccess.getCoordinatorBodyAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getSemicolonKeyword_4_3()); }

	';' 

{ after(grammarAccess.getCoordinatorBodyAccess().getSemicolonKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CoordinatorBody__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_4_2__0__Impl
	rule__CoordinatorBody__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getCoordinatorBodyAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoordinatorBody__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoordinatorBody__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getSelfexMethodsAssignment_4_2_1()); }
(rule__CoordinatorBody__SelfexMethodsAssignment_4_2_1)
{ after(grammarAccess.getCoordinatorBodyAccess().getSelfexMethodsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MutexSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutexSet__Group__0__Impl
	rule__MutexSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MutexSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutexSetAccess().getMutexKeyword_0()); }

	'mutex' 

{ after(grammarAccess.getMutexSetAccess().getMutexKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutexSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutexSet__Group__1__Impl
	rule__MutexSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MutexSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutexSetAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getMutexSetAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutexSet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutexSet__Group__2__Impl
	rule__MutexSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MutexSet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutexSetAccess().getMethodsAssignment_2()); }
(rule__MutexSet__MethodsAssignment_2)
{ after(grammarAccess.getMutexSetAccess().getMethodsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutexSet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutexSet__Group__3__Impl
	rule__MutexSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MutexSet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMutexSetAccess().getGroup_3()); }
(rule__MutexSet__Group_3__0)
{ after(grammarAccess.getMutexSetAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getMutexSetAccess().getGroup_3()); }
(rule__MutexSet__Group_3__0)*
{ after(grammarAccess.getMutexSetAccess().getGroup_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutexSet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutexSet__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MutexSet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutexSetAccess().getRightCurlyBracketSemicolonKeyword_4()); }

	'};' 

{ after(grammarAccess.getMutexSetAccess().getRightCurlyBracketSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MutexSet__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutexSet__Group_3__0__Impl
	rule__MutexSet__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MutexSet__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutexSetAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getMutexSetAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MutexSet__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MutexSet__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MutexSet__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutexSetAccess().getMethodsAssignment_3_1()); }
(rule__MutexSet__MethodsAssignment_3_1)
{ after(grammarAccess.getMutexSetAccess().getMethodsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CondVar__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondVar__Group__0__Impl
	rule__CondVar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondVar__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondVarAccess().getNameAssignment_0()); }
(rule__CondVar__NameAssignment_0)
{ after(grammarAccess.getCondVarAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CondVar__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondVar__Group__1__Impl
	rule__CondVar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondVar__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondVarAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getCondVarAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CondVar__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondVar__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondVar__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondVarAccess().getValueAssignment_2()); }
(rule__CondVar__ValueAssignment_2)
{ after(grammarAccess.getCondVarAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrdVar__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrdVar__Group__0__Impl
	rule__OrdVar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrdVar__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrdVarAccess().getNameAssignment_0()); }
(rule__OrdVar__NameAssignment_0)
{ after(grammarAccess.getOrdVarAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrdVar__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrdVar__Group__1__Impl
	rule__OrdVar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrdVar__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrdVarAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getOrdVarAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrdVar__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrdVar__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrdVar__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrdVarAccess().getValueAssignment_2()); }
(rule__OrdVar__ValueAssignment_2)
{ after(grammarAccess.getOrdVarAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__CoordinatorDeclaration__GranularityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorDeclarationAccess().getGranularityPer_classKeyword_0_0()); }
(
{ before(grammarAccess.getCoordinatorDeclarationAccess().getGranularityPer_classKeyword_0_0()); }

	'per_class' 

{ after(grammarAccess.getCoordinatorDeclarationAccess().getGranularityPer_classKeyword_0_0()); }
)

{ after(grammarAccess.getCoordinatorDeclarationAccess().getGranularityPer_classKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorDeclaration__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorDeclarationAccess().getClassNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getCoordinatorDeclarationAccess().getClassNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorDeclaration__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorDeclarationAccess().getBodyCoordinatorBodyParserRuleCall_3_0()); }
	ruleCoordinatorBody{ after(grammarAccess.getCoordinatorDeclarationAccess().getBodyCoordinatorBodyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__CondVarsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getCondVarsCondVarParserRuleCall_2_1_0()); }
	ruleCondVar{ after(grammarAccess.getCoordinatorBodyAccess().getCondVarsCondVarParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__CondVarsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getCondVarsCondVarParserRuleCall_2_2_1_0()); }
	ruleCondVar{ after(grammarAccess.getCoordinatorBodyAccess().getCondVarsCondVarParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__OrdVarsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getOrdVarsOrdVarParserRuleCall_3_1_0()); }
	ruleOrdVar{ after(grammarAccess.getCoordinatorBodyAccess().getOrdVarsOrdVarParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__OrdVarsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getOrdVarsOrdVarParserRuleCall_3_2_1_0()); }
	ruleOrdVar{ after(grammarAccess.getCoordinatorBodyAccess().getOrdVarsOrdVarParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__SelfexMethodsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getSelfexMethodsQualifiedNameParserRuleCall_4_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getCoordinatorBodyAccess().getSelfexMethodsQualifiedNameParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__SelfexMethodsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getSelfexMethodsQualifiedNameParserRuleCall_4_2_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getCoordinatorBodyAccess().getSelfexMethodsQualifiedNameParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoordinatorBody__MutexSetsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinatorBodyAccess().getMutexSetsMutexSetParserRuleCall_5_0()); }
	ruleMutexSet{ after(grammarAccess.getCoordinatorBodyAccess().getMutexSetsMutexSetParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MutexSet__MethodsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutexSetAccess().getMethodsQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getMutexSetAccess().getMethodsQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MutexSet__MethodsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMutexSetAccess().getMethodsQualifiedNameParserRuleCall_3_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getMutexSetAccess().getMethodsQualifiedNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CondVar__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondVarAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getCondVarAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CondVar__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondVarAccess().getValueBooleanValParserRuleCall_2_0()); }
	ruleBooleanVal{ after(grammarAccess.getCondVarAccess().getValueBooleanValParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrdVar__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrdVarAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getOrdVarAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrdVar__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrdVarAccess().getValueINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getOrdVarAccess().getValueINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


