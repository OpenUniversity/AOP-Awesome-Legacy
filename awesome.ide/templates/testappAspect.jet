<%@ jet package="awesome.ide.gen" class="TestappAspect" imports="awesome.ide.model.*"%>
<%String packageName = ((String[])argument)[0];%>
<%String aspectName = ((String[])argument)[1];%>
<%String mechanismId = ((String[])argument)[2];%>
package <%=packageName%>;

import org.aspectj.lang.annotation.*;
import org.aspectj.lang.ProceedingJoinPoint;

import awesome.platform.ReifyStrategy;
import awesome.platform.annotations.AwAspectMechanism;
import awesome.platform.annotations.AwReify;

@Aspect
<%if(!mechanismId.equals(MultiMechanismProject.ASPECTJ_ID)) {%>
@AwAspectMechanism(id="<%=mechanismId%>")<%}%>
@AwReify(ReifyStrategy.SUPPRESS_STATICINITIALIZATION)
public class <%=aspectName%> {
	
	@AwReify(ReifyStrategy.SUPPRESS_ALL)
	public <%=aspectName%>() {}
	
	@AwReify(ReifyStrategy.SUPPRESS_WITHIN)
	@Around("execution(* <%=AspectMechanismTestProject.BASE_FOLDER%>.<%=AspectMechanismTestProject.TESTAPP_MAIN%>.main(..))")
	public void <%=mechanismId%>Around(ProceedingJoinPoint pjp) {
		System.out.println("Around main... (<%=aspectName%>)");
		pjp.proceed();
	}
	
	@AwReify(ReifyStrategy.SUPPRESS_WITHIN)
	@Before("execution(* <%=AspectMechanismTestProject.BASE_FOLDER%>.<%=AspectMechanismTestProject.TESTAPP_MAIN%>.main(..))")
	public void <%=mechanismId%>Before() {
		System.out.println("Before main... (<%=aspectName%>)");
	}
	
	@AwReify(ReifyStrategy.SUPPRESS_WITHIN)
	@After("execution(* <%=AspectMechanismTestProject.BASE_FOLDER%>.<%=AspectMechanismTestProject.TESTAPP_MAIN%>.main(..))")
	public void <%=mechanismId%>After() {
		System.out.println("After main... (<%=aspectName%>)");
	}
}