<%@ jet package="awesome.ide.gen" class="AspectMechanismGen" %>
<%String packageName = ((String[])argument)[0];%>
<%String aspectName = ((String[])argument)[1];%>
<%String id = ((String[])argument)[2];%>
package <%=packageName%>;

import awesome.platform.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import org.aspectj.weaver.IClassFileProvider;
import org.aspectj.weaver.bcel.BcelShadow;
import org.aspectj.weaver.bcel.UnwovenClassFile;

public aspect <%=aspectName%> extends AwesomeMechanism {
	/**
	* Holds all the aspects of the DSAL that were generated by the front-end
	*/
	private List<AspectClass> aspectClasses = new ArrayList<AspectClass>();
	
	public String getId() {
		return "<%=id%>";
	}
	
	@Override
	public List<IEffect> match(BcelShadow shadow) {
		return super.match(shadow);	
	}
	
	// initializes aspectClasses...
	@Override
	public void setInputFiles(IClassFileProvider inputClasses) {
		super.setInputFiles(inputClasses);
		
		System.out.println(getId() + ".setInputFiles...");
		for (Iterator i = inputClasses.getClassFileIterator(); i.hasNext();) {
			UnwovenClassFile classFile = (UnwovenClassFile) i.next();
			 	
			if(!AwesomeCore.hasAspectAnnotation(classFile) || 
				!AwesomeCore.belongsToAspectMechanism(classFile.getJavaClass(), getId())) {
				continue;
			}
			System.out.println("Found " + getId() + " aspect class: " + classFile.getClassName() + ".");
			AspectClass ac = AwesomeCore.create(classFile);
			aspectClasses.add(ac);
		}		 
	}
}